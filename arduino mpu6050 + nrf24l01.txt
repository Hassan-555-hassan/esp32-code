#include <Wire.h>
#include <MPU6050.h>
#include <SPI.h>
#include <RF24.h>

// إعداد NRF24L01
#define CE_PIN 9
#define CSN_PIN 8
RF24 radio(CE_PIN, CSN_PIN);
const byte address[6] = "00001";

// إعداد MPU6050
MPU6050 mpu;

// LED متصل على D10
#define LED_PIN 10

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  Serial.println("⏳ Initializing Receiver...");

  // تهيئة NRF24L01
  if (!radio.begin()) {
    Serial.println("❌ NRF24L01 not detected!");
    while (1);  // توقف البرنامج
  }

  radio.openReadingPipe(0, address);
  radio.setChannel(100);
  radio.setPALevel(RF24_PA_LOW);
  radio.setDataRate(RF24_1MBPS);
  radio.startListening();

  Serial.println("✅ Receiver Ready. Listening...");

  // بعد التأكد من NRF24 نبدأ تهيئة MPU6050
  Wire.begin();
  mpu.initialize();

  if (!mpu.testConnection()) {
    Serial.println("❌ فشل الاتصال بـ MPU6050");
    while (1);  // توقف البرنامج
  }

  Serial.println("✅ تهيئة MPU6050 تم بنجاح!");
}

void loop() {
  // استقبال بيانات من المرسل
  if (radio.available()) {
    char text[32] = "";
    radio.read(&text, sizeof(text));

    Serial.print("📥 Received: ");
    Serial.println(text);

    if (strcmp(text, "LIGHT") == 0) {
      digitalWrite(LED_PIN, HIGH);
      delay(500);
      digitalWrite(LED_PIN, LOW);
    }
  }

  // قراءة بيانات MPU6050
  int16_t ax, ay, az;
  int16_t gx, gy, gz;

  mpu.getAcceleration(&ax, &ay, &az);
  mpu.getRotation(&gx, &gy, &gz);

  // طباعة القيم
  Serial.print("AX: "); Serial.print(ax);
  Serial.print(" AY: "); Serial.print(ay);
  Serial.print(" AZ: "); Serial.println(az);

  Serial.print("GX: "); Serial.print(gx);
  Serial.print(" GY: "); Serial.print(gy);
  Serial.print(" GZ: "); Serial.println(gz);

  // تشغيل LED إذا كان هناك حركة قوية
  if (abs(ax) > 3000) {
    digitalWrite(LED_PIN, HIGH);
  } else {
    digitalWrite(LED_PIN, LOW);
  }

  delay(500);
}
